name:                   antemodulum
version:                0.5.1
synopsis:               Yet another prelude
category:               Prelude
description:            This is one (very biased) attempt to make a prelude
                        module that (1) ensures the exported names do not
                        conflict and (2) significantly reduces the number of
                        imports needed in a given module. It is meant to be
                        extended and updated as needed.
license:                MIT
author:                 Sean Leather
maintainer:             eng@docmunch.com
copyright:              Daggerboard Inc. (docmunch.com)
license-file:           LICENSE
build-type:             Simple
cabal-version:          >= 1.16

extra-source-files:
                        README.md

source-repository       head
  type:                 git
  location:             git://github.com/docmunch/antemodulum.git

library

  default-language:     Haskell2010

  default-extensions:
                        LambdaCase,
                        FlexibleContexts,
                        FlexibleInstances,
                        NoImplicitPrelude,
                        OverloadedStrings,
                        ScopedTypeVariables,
                        TypeSynonymInstances

  ghc-options:          -Wall -fwarn-missing-local-sigs

  hs-source-dirs:       src

  exposed-modules:
                        Antemodulum
                        Antemodulum.Applicative
                        Antemodulum.Arrow
                        Antemodulum.ByteString.Char8
                        Antemodulum.ByteString.Lazy
                        Antemodulum.ByteString.Strict
                        Antemodulum.Char
                        Antemodulum.ClassyPrelude
                        Antemodulum.Concurrent
                        Antemodulum.DeepSeq
                        Antemodulum.Default
                        Antemodulum.FilePath
                        Antemodulum.Functor
                        Antemodulum.List.NonEmpty
                        Antemodulum.Text
                        Antemodulum.Text.Lazy
                        Antemodulum.Text.Strict
                        Antemodulum.Maybe
                        Antemodulum.Monad
                        Antemodulum.Monad.Error
                        Antemodulum.Monad.IO
                        Antemodulum.Monad.Lazy
                        Antemodulum.Monad.Strict
                        Antemodulum.Numeric
                        Antemodulum.Read
                        Antemodulum.Safe
                        Antemodulum.Strict
                        Antemodulum.Strict.Pair
                        Antemodulum.System
                        Antemodulum.Time

  -- We add package dependency constraints conservatively. This helps avoid
  -- introducing new conflicts when all of these packages have their own. Since
  -- we are, for the most, only re-exporting modules from these packages, we do
  -- not expect many problems. If problems do arise, we will add constraints as
  -- necessary.
  build-depends:
                        -- Use an upper limit to please 'cabal check'.
                        base < 10,

                        -- For these packages, use the latest version with the
                        -- most refined type classes that do not conflict.
                        -- Upgrade as necessary.
                        classy-prelude == 0.9.*,
                        mono-traversable == 0.5.*,

                        -- The Default class was split off in 0.5.2. Depending
                        -- on an older version can cause dependency problems.
                        data-default >= 0.5.2,

                        -- No explicit constraints on the remaining packages.
                        bytestring,
                        deepseq,
                        directory,
                        lifted-async,
                        lifted-base,
                        monad-control,
                        monad-logger,
                        mtl,
                        process,
                        resourcet,
                        safe,
                        semigroups,
                        setenv,
                        strict,
                        system-fileio,
                        system-filepath,
                        text,
                        time,
                        transformers,
                        transformers-base
